<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.9" jmeter="3.0 r1743807">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${__P(URL)}</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.connect_timeout">10000</stringProp>
        <stringProp name="HTTPSampler.response_timeout">60000</stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <stringProp name="CookieManager.policy">standard</stringProp>
        <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
      </CookieManager>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="Accept-Language" elementType="Header">
            <stringProp name="Header.name">Accept-Language</stringProp>
            <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
          </elementProp>
          <elementProp name="Origin" elementType="Header">
            <stringProp name="Header.name">Origin</stringProp>
            <stringProp name="Header.value">https://www.expedia.com</stringProp>
          </elementProp>
          <elementProp name="Accept" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
          </elementProp>
          <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
            <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
            <stringProp name="Header.value">1</stringProp>
          </elementProp>
          <elementProp name="Content-Type" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
          </elementProp>
          <elementProp name="Cache-Control" elementType="Header">
            <stringProp name="Header.name">Cache-Control</stringProp>
            <stringProp name="Header.value">max-age=0</stringProp>
          </elementProp>
          <elementProp name="Accept-Encoding" elementType="Header">
            <stringProp name="Header.name">Accept-Encoding</stringProp>
            <stringProp name="Header.value">gzip, deflate, br</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">I AM A JENKINS SERVER Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(num.threads,1)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(ramp.up,0)}</stringProp>
        <longProp name="ThreadGroup.start_time">1469204153000</longProp>
        <longProp name="ThreadGroup.end_time">1469204153000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${__P(test.duration,300)}</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="HomePage Controller" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1597241061">id=&quot;home-page&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="63 /api/flight/getairlines" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/flight/getairlines</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="66 /api/trips/upcoming" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/trips/upcoming</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="72 /loyalty/addChromeExtension" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/loyalty/addChromeExtension</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="73 /loyalty/evaluatePreconditions" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="abacusId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">abacusId</stringProp>
                  <stringProp name="Argument.value">9920</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="preconditions" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">preconditions</stringProp>
                  <stringProp name="Argument.value">rewardsUserRequired</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/loyalty/evaluatePreconditions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="68 /Recommender" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="item" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">item</stringProp>
                  <stringProp name="Argument.value">chicago,il,us</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="scenario" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">scenario</stringProp>
                  <stringProp name="Argument.value">homepage</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="itemType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">itemType</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="criteria" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">criteria</stringProp>
                  <stringProp name="Argument.value">region-region-item%7C1%7C3:3%7C32</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="recItemType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">recItemType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="geoInfo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">geoInfo</stringProp>
                  <stringProp name="Argument.value">300</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="travellersInfo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">travellersInfo</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Recommender</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="80 /loyalty/notification/onenightawaynexttier/preconditions" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/loyalty/notification/onenightawaynexttier/preconditions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="77 /loyalty/notification/couponavailability/hotel/preconditions" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/loyalty/notification/couponavailability/hotel/preconditions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="79 /loyalty/notification/pointsexpiration/preconditions" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/loyalty/notification/pointsexpiration/preconditions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="78 /loyalty/notification/couponexpiration/hotel/preconditions" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/loyalty/notification/couponexpiration/hotel/preconditions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="81 /loyalty/notification/paywithpointseligibility/hotel/preconditions" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/loyalty/notification/paywithpointseligibility/hotel/preconditions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="82 /loyalty/notification/rewardsnightsaway/preconditions" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/loyalty/notification/rewardsnightsaway/preconditions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="91 /api/userhistory" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">l</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">HOTEL_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">HOTEL_DETAIL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">AIR_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">PACKAGE_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">AIR_DETAIL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">CAR_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">CRUISE_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">ACTIVITY_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">ACTIVITY_DETAIL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1469203528195</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/userhistory</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="101 /loyalty/evaluatePreconditions" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="abacusId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">abacusId</stringProp>
                  <stringProp name="Argument.value">8861</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="preconditions" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">preconditions</stringProp>
                  <stringProp name="Argument.value">identifiedOrAuthUserRequired</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/loyalty/evaluatePreconditions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="120 /service/userHistory/count/jsonp" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="guid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">guid</stringProp>
                  <stringProp name="Argument.value">87e3c212-ce00-40fd-b5bc-3e9485aec71f</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="expuserid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">expuserid</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="siteid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">siteid</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">HOTEL_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">HOTEL_DETAIL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">AIR_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">PACKAGE_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">AIR_DETAIL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">CAR_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">CRUISE_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">ACTIVITY_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">ACTIVITY_DETAIL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">format</stringProp>
                  <stringProp name="Argument.value">jsonp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="callback" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">callback</stringProp>
                  <stringProp name="Argument.value">jQuery18207858859795174011_1469203521169</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1469203523190</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">userhistory-web.us-east-1.prod.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/service/userHistory/count/jsonp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="123 /news/v1/expid/-1/siteid/1/tuid/-1/guid/87e3c212-ce00-40fd-b5bc-3e9485aec71f" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">format</stringProp>
                  <stringProp name="Argument.value">jsonp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="callback" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">callback</stringProp>
                  <stringProp name="Argument.value">jQuery18207858859795174011_1469203521168</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1469203523169</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">newsfeed-scalatra-service.us-east-1.prod.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/news/v1/expid/-1/siteid/1/tuid/-1/guid/87e3c212-ce00-40fd-b5bc-3e9485aec71f</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="125 /hint/es/v1/ac/en_US/zzzzz" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="callback" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">callback</stringProp>
                  <stringProp name="Argument.value">jQuery18207858859795174011_1469203521167</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">95</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ab" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ab</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lob" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lob</stringProp>
                  <stringProp name="Argument.value">FLIGHTS</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">format</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dest" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dest</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="maxresults" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">maxresults</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client</stringProp>
                  <stringProp name="Argument.value">Homepage</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="siteid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">siteid</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="guid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">guid</stringProp>
                  <stringProp name="Argument.value">87e3c212ce0040fdb5bc3e9485aec71f</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1469203523099</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">suggest.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/hint/es/v1/ac/en_US/zzzzz</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="132 /api/v4/typeahead/ORD" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="callback" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">callback</stringProp>
                  <stringProp name="Argument.value">jQuery18207858859795174011_1469203521173</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="regiontype" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">regiontype</stringProp>
                  <stringProp name="Argument.value">95</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="locale" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">locale</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="features" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">features</stringProp>
                  <stringProp name="Argument.value">ta_hierarchy%7Cnearby_airport</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ab" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ab</stringProp>
                  <stringProp name="Argument.value">8071.1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lob" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lob</stringProp>
                  <stringProp name="Argument.value">FLIGHTS</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">format</stringProp>
                  <stringProp name="Argument.value">jsonp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dest" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dest</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="maxresults" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">maxresults</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client</stringProp>
                  <stringProp name="Argument.value">Homepage</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="siteid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">siteid</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="guid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">guid</stringProp>
                  <stringProp name="Argument.value">87e3c212ce0040fdb5bc3e9485aec71f</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1469203527690</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">suggest.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/typeahead/ORD</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Flight Search Controller" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="152 /Flights-Search" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="trip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">trip</stringProp>
                  <stringProp name="Argument.value">roundtrip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="leg1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">leg1</stringProp>
                  <stringProp name="Argument.value">from:ord,to:lax,departure:10/05/2016TANYT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="leg2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">leg2</stringProp>
                  <stringProp name="Argument.value">from:lax,to:ord,departure:10/07/2016TANYT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="passengers" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">passengers</stringProp>
                  <stringProp name="Argument.value">children:0,adults:1,seniors:0,infantinlap:Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="mode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mode</stringProp>
                  <stringProp name="Argument.value">search</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Flights-Search</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="CSS/JQuery Extractor" enabled="true">
              <stringProp name="HtmlExtractor.refname">foo</stringProp>
              <stringProp name="HtmlExtractor.expr">#originalContinuationId</stringProp>
              <stringProp name="HtmlExtractor.attribute"></stringProp>
              <stringProp name="HtmlExtractor.default">house</stringProp>
              <stringProp name="HtmlExtractor.match_number"></stringProp>
              <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            </HtmlExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="809119737">Select your flight</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="209 /service/userHistory/count/jsonp" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="guid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">guid</stringProp>
                  <stringProp name="Argument.value">87e3c212-ce00-40fd-b5bc-3e9485aec71f</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="expuserid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">expuserid</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="siteid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">siteid</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">HOTEL_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">HOTEL_DETAIL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">AIR_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">PACKAGE_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">AIR_DETAIL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">CAR_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">CRUISE_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">ACTIVITY_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">ACTIVITY_DETAIL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">format</stringProp>
                  <stringProp name="Argument.value">jsonp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="callback" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">callback</stringProp>
                  <stringProp name="Argument.value">jQuery182023888680532264228_1469203550126</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1469203552042</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">userhistory-web.us-east-1.prod.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/service/userHistory/count/jsonp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/Flights-Search?trip=roundtrip&amp;leg1=from:ord,to:lax,departure:10/05/2016TANYT&amp;leg2=from:lax,to:ord,departure:10/07/2016TANYT&amp;passengers=children:0,adults:1,seniors:0,infantinlap:Y&amp;mode=search</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="212 /api/userhistory/options" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1469203552259</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/userhistory/options</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/Flights-Search?trip=roundtrip&amp;leg1=from:ord,to:lax,departure:10/05/2016TANYT&amp;leg2=from:lax,to:ord,departure:10/07/2016TANYT&amp;passengers=children:0,adults:1,seniors:0,infantinlap:Y&amp;mode=search</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="FSR Controller" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="199 /Flight-Search-Outbound" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">${foo}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1469203551653</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Flight-Search-Outbound</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">FSR_OUTBOUND_CONTINUATION_ID;TRIP_ID_OUTBOUND</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">continuationId;searchResultsModel.offers[0].tripId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">FSR_OUTBOUND_FED_UP;TRIP_ID_OUTBOUND_BROKE</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1171363928">&quot;fare&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="229 /FlightDiscovery" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="origin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">origin</stringProp>
                  <stringProp name="Argument.value">ORD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="destination" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">destination</stringProp>
                  <stringProp name="Argument.value">LAX</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="depart" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">depart</stringProp>
                  <stringProp name="Argument.value">2016-10-05</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="return" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">return</stringProp>
                  <stringProp name="Argument.value">2016-10-07</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="adults" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">adults</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="children" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">children</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="childAges" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">childAges</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inLap" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inLap</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1469203570518</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/FlightDiscovery</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/Flights-Search?trip=roundtrip&amp;leg1=from:ord,to:lax,departure:10/05/2016TANYT&amp;leg2=from:lax,to:ord,departure:10/07/2016TANYT&amp;passengers=children:0,adults:1,seniors:0,infantinlap:Y&amp;mode=search</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="238 /priceTrends" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="origin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">origin</stringProp>
                  <stringProp name="Argument.value">ORD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="destination" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">destination</stringProp>
                  <stringProp name="Argument.value">LAX</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="departureDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">departureDate</stringProp>
                  <stringProp name="Argument.value">2016-10-05</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tpid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tpid</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1469203571362</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/priceTrends</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/Flights-Search?trip=roundtrip&amp;leg1=from:ord,to:lax,departure:10/05/2016TANYT&amp;leg2=from:lax,to:ord,departure:10/07/2016TANYT&amp;passengers=children:0,adults:1,seniors:0,infantinlap:Y&amp;mode=search</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="262 /api/userhistory" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">l</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">HOTEL_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">HOTEL_DETAIL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">AIR_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">PACKAGE_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">AIR_DETAIL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">CAR_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">CRUISE_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">ACTIVITY_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">ACTIVITY_DETAIL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1469203572331</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/userhistory</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/Flights-Search?trip=roundtrip&amp;leg1=from:ord,to:lax,departure:10/05/2016TANYT&amp;leg2=from:lax,to:ord,departure:10/07/2016TANYT&amp;passengers=children:0,adults:1,seniors:0,infantinlap:Y&amp;mode=search</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="237 /flights/getrichcontent/v3" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;messageInfo&quot;:{&quot;tpid&quot;:1,&quot;eapid&quot;:0,&quot;tuid&quot;:-1},&quot;richInfoList&quot;:{&quot;richInfo&quot;:[{&quot;id&quot;:&quot;1&quot;,&quot;searchContext&quot;:{&quot;tripGeometry&quot;:&quot;ONEWAY&quot;,&quot;flightCriteria&quot;:{&quot;airTravelerCategoryList&quot;:{&quot;airTravelerCategory&quot;:[{&quot;airTravelerCategoryCode&quot;:&quot;adult&quot;,&quot;airTravelerCategoryCount&quot;:1},{&quot;airTravelerCategoryCode&quot;:&quot;child&quot;,&quot;airTravelerCategoryCount&quot;:0}]}}},&quot;odlist&quot;:{&quot;od&quot;:[{&quot;id&quot;:0,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:2,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;F9&quot;,&quot;operatingCarrierCode&quot;:&quot;F9&quot;,&quot;flightNumber&quot;:&quot;1269&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:1,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;2223&quot;,&quot;bookingCode&quot;:&quot;Q&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:2,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;1243&quot;,&quot;bookingCode&quot;:&quot;N&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:3,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;2550&quot;,&quot;bookingCode&quot;:&quot;N&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:4,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;2452&quot;,&quot;bookingCode&quot;:&quot;N&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:5,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:2,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;NK&quot;,&quot;operatingCarrierCode&quot;:&quot;NK&quot;,&quot;flightNumber&quot;:&quot;737&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:6,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:2,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;NK&quot;,&quot;operatingCarrierCode&quot;:&quot;NK&quot;,&quot;flightNumber&quot;:&quot;731&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:7,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;VX&quot;,&quot;operatingCarrierCode&quot;:&quot;VX&quot;,&quot;flightNumber&quot;:&quot;231&quot;,&quot;bookingCode&quot;:&quot;N&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:8,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;VX&quot;,&quot;operatingCarrierCode&quot;:&quot;VX&quot;,&quot;flightNumber&quot;:&quot;241&quot;,&quot;bookingCode&quot;:&quot;N&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:9,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;2225&quot;,&quot;bookingCode&quot;:&quot;N&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:10,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;1571&quot;,&quot;bookingCode&quot;:&quot;N&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:11,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;1081&quot;,&quot;bookingCode&quot;:&quot;N&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:12,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;1358&quot;,&quot;bookingCode&quot;:&quot;N&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:13,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;111&quot;,&quot;bookingCode&quot;:&quot;N&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:14,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;2220&quot;,&quot;bookingCode&quot;:&quot;N&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:15,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;683&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:16,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AS&quot;,&quot;operatingCarrierCode&quot;:&quot;AS&quot;,&quot;flightNumber&quot;:&quot;23&quot;,&quot;bookingCode&quot;:&quot;R&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;SEA&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;AS&quot;,&quot;operatingCarrierCode&quot;:&quot;AS&quot;,&quot;flightNumber&quot;:&quot;460&quot;,&quot;bookingCode&quot;:&quot;R&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;SEA&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:17,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;1153&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:18,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;617&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:19,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;281&quot;,&quot;bookingCode&quot;:&quot;V&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;DFW&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;2250&quot;,&quot;bookingCode&quot;:&quot;V&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DFW&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:20,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;9E&quot;,&quot;flightNumber&quot;:&quot;3780&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;MSP&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1352&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;MSP&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:21,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;OO&quot;,&quot;flightNumber&quot;:&quot;4478&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;SLC&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;2576&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;SLC&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:22,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;814&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;MSP&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;2168&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;MSP&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:23,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1785&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;MSP&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;990&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;MSP&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:24,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1165&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;SLC&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;705&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;SLC&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:25,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1717&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;MSP&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;2321&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;MSP&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:26,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;2223&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;MSP&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;2565&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;MSP&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:27,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;9E&quot;,&quot;flightNumber&quot;:&quot;3866&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;CVG&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;883&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;CVG&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:28,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;OO&quot;,&quot;flightNumber&quot;:&quot;4541&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;CVG&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;972&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;CVG&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:29,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1319&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;DTW&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1719&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DTW&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:30,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1533&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;DTW&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;585&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DTW&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:31,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;9E&quot;,&quot;flightNumber&quot;:&quot;3780&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;MSP&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;990&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;MSP&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:32,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;628&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;DTW&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1248&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DTW&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:33,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;555&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;ATL&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1755&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ATL&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:34,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;2629&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;DTW&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;2425&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DTW&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:35,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;662&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;ATL&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;811&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ATL&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:36,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;977&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;ATL&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1625&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ATL&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:37,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1632&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;MSP&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1352&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;MSP&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:38,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;2412&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;ATL&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1655&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ATL&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:39,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;2223&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;MSP&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;2321&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;MSP&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:40,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1542&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;ATL&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1755&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ATL&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:41,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;812&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;ATL&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;204&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ATL&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:42,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1319&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;DTW&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;585&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DTW&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:43,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1533&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;DTW&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1248&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DTW&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:44,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;555&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;ATL&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;811&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ATL&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:45,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;2050&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;DTW&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1719&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DTW&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:46,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1477&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;ATL&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1655&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ATL&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:47,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AS&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;6676&quot;,&quot;bookingCode&quot;:&quot;H&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:48,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AS&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;6726&quot;,&quot;bookingCode&quot;:&quot;H&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:49,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AS&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;6825&quot;,&quot;bookingCode&quot;:&quot;H&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:50,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AS&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;8059&quot;,&quot;bookingCode&quot;:&quot;H&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:51,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AS&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;6677&quot;,&quot;bookingCode&quot;:&quot;H&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:52,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AS&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;8023&quot;,&quot;bookingCode&quot;:&quot;H&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:53,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AS&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;6666&quot;,&quot;bookingCode&quot;:&quot;H&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:54,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AS&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;6669&quot;,&quot;bookingCode&quot;:&quot;H&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:55,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AS&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;6356&quot;,&quot;bookingCode&quot;:&quot;H&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:56,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:2,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;NK&quot;,&quot;operatingCarrierCode&quot;:&quot;NK&quot;,&quot;flightNumber&quot;:&quot;357&quot;,&quot;bookingCode&quot;:&quot;R&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAS&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;NK&quot;,&quot;operatingCarrierCode&quot;:&quot;NK&quot;,&quot;flightNumber&quot;:&quot;561&quot;,&quot;bookingCode&quot;:&quot;R&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAS&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:57,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;204&quot;,&quot;bookingCode&quot;:&quot;S&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:58,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;531&quot;,&quot;bookingCode&quot;:&quot;S&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:59,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;793&quot;,&quot;bookingCode&quot;:&quot;S&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:60,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;411&quot;,&quot;bookingCode&quot;:&quot;S&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:61,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;732&quot;,&quot;bookingCode&quot;:&quot;S&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:62,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;592&quot;,&quot;bookingCode&quot;:&quot;S&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:63,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;310&quot;,&quot;bookingCode&quot;:&quot;S&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:64,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1632&quot;,&quot;bookingCode&quot;:&quot;U&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;MSP&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1559&quot;,&quot;bookingCode&quot;:&quot;U&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;MSP&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:65,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1477&quot;,&quot;bookingCode&quot;:&quot;U&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;ATL&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1555&quot;,&quot;bookingCode&quot;:&quot;U&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ATL&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:66,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;814&quot;,&quot;bookingCode&quot;:&quot;U&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;MSP&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1559&quot;,&quot;bookingCode&quot;:&quot;U&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;MSP&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:67,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;977&quot;,&quot;bookingCode&quot;:&quot;U&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;ATL&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1555&quot;,&quot;bookingCode&quot;:&quot;U&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ATL&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:68,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AS&quot;,&quot;operatingCarrierCode&quot;:&quot;AS&quot;,&quot;flightNumber&quot;:&quot;29&quot;,&quot;bookingCode&quot;:&quot;K&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;SEA&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;VX&quot;,&quot;operatingCarrierCode&quot;:&quot;VX&quot;,&quot;flightNumber&quot;:&quot;798&quot;,&quot;bookingCode&quot;:&quot;N&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;SEA&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:69,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;2001&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:70,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;463&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:71,&quot;airFareCategoryCode&quot;:&quot;N&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;B6&quot;,&quot;operatingCarrierCode&quot;:&quot;B6&quot;,&quot;flightNumber&quot;:&quot;606&quot;,&quot;bookingCode&quot;:&quot;U&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;JFK&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;B6&quot;,&quot;operatingCarrierCode&quot;:&quot;B6&quot;,&quot;flightNumber&quot;:&quot;2023&quot;,&quot;bookingCode&quot;:&quot;P&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;JFK&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:72,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AS&quot;,&quot;operatingCarrierCode&quot;:&quot;AS&quot;,&quot;flightNumber&quot;:&quot;29&quot;,&quot;bookingCode&quot;:&quot;G&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;SEA&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;AS&quot;,&quot;operatingCarrierCode&quot;:&quot;AS&quot;,&quot;flightNumber&quot;:&quot;464&quot;,&quot;bookingCode&quot;:&quot;G&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;SEA&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:73,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;499&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;SFO&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;1481&quot;,&quot;bookingCode&quot;:&quot;K&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;SFO&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:74,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;1742&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;SFO&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;257&quot;,&quot;bookingCode&quot;:&quot;K&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;SFO&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:75,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;1891&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;SFO&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;1481&quot;,&quot;bookingCode&quot;:&quot;K&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;SFO&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:76,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;743&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;SFO&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;257&quot;,&quot;bookingCode&quot;:&quot;K&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;SFO&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:77,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;308&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;SFO&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;261&quot;,&quot;bookingCode&quot;:&quot;K&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;SFO&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-06&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:78,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;1682&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;MSP&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;OO&quot;,&quot;flightNumber&quot;:&quot;5186&quot;,&quot;bookingCode&quot;:&quot;L&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;MSP&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:79,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;662&quot;,&quot;bookingCode&quot;:&quot;K&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ORD&quot;,&quot;destination&quot;:&quot;ATL&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1265&quot;,&quot;bookingCode&quot;:&quot;K&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ATL&quot;,&quot;destination&quot;:&quot;LAX&quot;,&quot;date&quot;:&quot;2016-10-05&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}}]}}]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/flights/getrichcontent/v3</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/Flights-Search?trip=roundtrip&amp;leg1=from:ord,to:lax,departure:10/05/2016TANYT&amp;leg2=from:lax,to:ord,departure:10/07/2016TANYT&amp;passengers=children:0,adults:1,seniors:0,infantinlap:Y&amp;mode=search</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="227 /Recommender-Ajax" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pkid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pkid</stringProp>
                  <stringProp name="Argument.value">v5-23b2bf9d426bb3055c65b7abb8a4ee32-0-0-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">count</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="bdls" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bdls</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sort" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sort</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="scenario" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">scenario</stringProp>
                  <stringProp name="Argument.value">fsr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sdate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sdate</stringProp>
                  <stringProp name="Argument.value">10-05-2016</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="edate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">edate</stringProp>
                  <stringProp name="Argument.value">10-07-2016</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dest" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dest</stringProp>
                  <stringProp name="Argument.value">LAX</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="otla" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">otla</stringProp>
                  <stringProp name="Argument.value">ORD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dtla" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dtla</stringProp>
                  <stringProp name="Argument.value">LAX</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="adults" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">adults</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="seniors" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">seniors</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="children" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">children</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="infantInLap" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">infantInLap</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rule" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rule</stringProp>
                  <stringProp name="Argument.value">flight-hotel-xsell</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1469203570490</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Recommender-Ajax</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/Flights-Search?trip=roundtrip&amp;leg1=from:ord,to:lax,departure:10/05/2016TANYT&amp;leg2=from:lax,to:ord,departure:10/07/2016TANYT&amp;passengers=children:0,adults:1,seniors:0,infantinlap:Y&amp;mode=search</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="282 /v1/airport/LAX/events" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="callback" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">callback</stringProp>
                  <stringProp name="Argument.value">jQuery182023888680532264228_1469203550125</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientId</stringProp>
                  <stringProp name="Argument.value">fsr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="startDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">startDate</stringProp>
                  <stringProp name="Argument.value">10%2F05%2F2016</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="endDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">endDate</stringProp>
                  <stringProp name="Argument.value">10%2F07%2F2016</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1469203571341</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">urgency-events.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/airport/LAX/events</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">9755</stringProp>
              <stringProp name="RandomTimer.range">100.0</stringProp>
              <stringProp name="TestPlan.comments">Recorded:9755ms</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/Flights-Search?trip=roundtrip&amp;leg1=from:ord,to:lax,departure:10/05/2016TANYT&amp;leg2=from:lax,to:ord,departure:10/07/2016TANYT&amp;passengers=children:0,adults:1,seniors:0,infantinlap:Y&amp;mode=search</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="283 /urgencyservice/v1/ticker/flight" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="callback" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">callback</stringProp>
                  <stringProp name="Argument.value">jQuery182023888680532264228_1469203550126</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="bookingDuration" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bookingDuration</stringProp>
                  <stringProp name="Argument.value">24h</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="searchDuration" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchDuration</stringProp>
                  <stringProp name="Argument.value">30m</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">search%2Cbooking</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientId</stringProp>
                  <stringProp name="Argument.value">fsr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="brandName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">brandName</stringProp>
                  <stringProp name="Argument.value">Expedia</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tlaList" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tlaList</stringProp>
                  <stringProp name="Argument.value">*%3ALAX</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1469203571338</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">urgency.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/urgencyservice/v1/ticker/flight</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/Flights-Search?trip=roundtrip&amp;leg1=from:ord,to:lax,departure:10/05/2016TANYT&amp;leg2=from:lax,to:ord,departure:10/07/2016TANYT&amp;passengers=children:0,adults:1,seniors:0,infantinlap:Y&amp;mode=search</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="356 /Flight-Search-Update" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">${FSR_OUTBOUND_CONTINUATION_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tripId0" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tripId0</stringProp>
                  <stringProp name="Argument.value">${TRIP_ID_OUTBOUND}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1469203626989</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Flight-Search-Update</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">FSR_RETURN_CONTINUATION_ID;TRIP_ID_RETURN;SPLIT_TICKET</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">continuationId;searchResultsModel.offers[0].tripId;searchResultsModel.offers[0].splitTicket</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">FSR_RETURN_FED_UP;TRIP_ID_RETURN_BROKE;SPLIT_TICKET_BROKE</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1171363928">&quot;fare&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="380 /flights/getrichcontent/v3" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;messageInfo&quot;:{&quot;tpid&quot;:1,&quot;eapid&quot;:0,&quot;tuid&quot;:-1},&quot;richInfoList&quot;:{&quot;richInfo&quot;:[{&quot;id&quot;:&quot;1&quot;,&quot;searchContext&quot;:{&quot;tripGeometry&quot;:&quot;ONEWAY&quot;,&quot;flightCriteria&quot;:{&quot;airTravelerCategoryList&quot;:{&quot;airTravelerCategory&quot;:[{&quot;airTravelerCategoryCode&quot;:&quot;adult&quot;,&quot;airTravelerCategoryCount&quot;:1},{&quot;airTravelerCategoryCode&quot;:&quot;child&quot;,&quot;airTravelerCategoryCount&quot;:0}]}}},&quot;odlist&quot;:{&quot;od&quot;:[{&quot;id&quot;:0,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;2576&quot;,&quot;bookingCode&quot;:&quot;Q&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:1,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:2,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;F9&quot;,&quot;operatingCarrierCode&quot;:&quot;F9&quot;,&quot;flightNumber&quot;:&quot;1252&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:2,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;1576&quot;,&quot;bookingCode&quot;:&quot;N&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:3,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:2,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;NK&quot;,&quot;operatingCarrierCode&quot;:&quot;NK&quot;,&quot;flightNumber&quot;:&quot;736&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:4,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:2,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;NK&quot;,&quot;operatingCarrierCode&quot;:&quot;NK&quot;,&quot;flightNumber&quot;:&quot;730&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:5,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;1307&quot;,&quot;bookingCode&quot;:&quot;S&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:6,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;395&quot;,&quot;bookingCode&quot;:&quot;G&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:7,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;219&quot;,&quot;bookingCode&quot;:&quot;G&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:8,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:2,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;F9&quot;,&quot;operatingCarrierCode&quot;:&quot;F9&quot;,&quot;flightNumber&quot;:&quot;402&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;DEN&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;F9&quot;,&quot;operatingCarrierCode&quot;:&quot;F9&quot;,&quot;flightNumber&quot;:&quot;1284&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DEN&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:9,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;564&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:10,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;110&quot;,&quot;bookingCode&quot;:&quot;V&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:11,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;2278&quot;,&quot;bookingCode&quot;:&quot;V&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:12,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;126&quot;,&quot;bookingCode&quot;:&quot;V&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:13,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;2503&quot;,&quot;bookingCode&quot;:&quot;V&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:14,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;661&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:15,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;1451&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:16,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;342&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:17,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;1195&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:18,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;1896&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:19,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;407&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:20,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;2039&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:21,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;283&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:22,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;613&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:23,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;506&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:24,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;269&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:25,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;491&quot;,&quot;bookingCode&quot;:&quot;V&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;PHX&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;411&quot;,&quot;bookingCode&quot;:&quot;V&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;PHX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:26,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;474&quot;,&quot;bookingCode&quot;:&quot;V&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;PHX&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;710&quot;,&quot;bookingCode&quot;:&quot;V&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;PHX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:27,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;VX&quot;,&quot;operatingCarrierCode&quot;:&quot;VX&quot;,&quot;flightNumber&quot;:&quot;236&quot;,&quot;bookingCode&quot;:&quot;S&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:28,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;VX&quot;,&quot;operatingCarrierCode&quot;:&quot;VX&quot;,&quot;flightNumber&quot;:&quot;232&quot;,&quot;bookingCode&quot;:&quot;S&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:29,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AS&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;6828&quot;,&quot;bookingCode&quot;:&quot;H&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:30,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AS&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;6743&quot;,&quot;bookingCode&quot;:&quot;H&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:31,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AS&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;8069&quot;,&quot;bookingCode&quot;:&quot;H&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:32,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;910&quot;,&quot;bookingCode&quot;:&quot;S&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:33,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;587&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;DTW&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;2017&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DTW&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-08&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:34,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;660&quot;,&quot;bookingCode&quot;:&quot;S&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:35,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AS&quot;,&quot;operatingCarrierCode&quot;:&quot;AS&quot;,&quot;flightNumber&quot;:&quot;183&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;SEA&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;AS&quot;,&quot;operatingCarrierCode&quot;:&quot;AS&quot;,&quot;flightNumber&quot;:&quot;20&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;SEA&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-08&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:36,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;474&quot;,&quot;bookingCode&quot;:&quot;G&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;PHX&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;593&quot;,&quot;bookingCode&quot;:&quot;G&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;PHX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:37,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1876&quot;,&quot;bookingCode&quot;:&quot;U&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;DTW&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;678&quot;,&quot;bookingCode&quot;:&quot;U&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DTW&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:38,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1406&quot;,&quot;bookingCode&quot;:&quot;U&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;DTW&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;2017&quot;,&quot;bookingCode&quot;:&quot;U&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DTW&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-08&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:39,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;333&quot;,&quot;bookingCode&quot;:&quot;U&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;DTW&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;678&quot;,&quot;bookingCode&quot;:&quot;U&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DTW&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:40,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AS&quot;,&quot;operatingCarrierCode&quot;:&quot;AS&quot;,&quot;flightNumber&quot;:&quot;551&quot;,&quot;bookingCode&quot;:&quot;G&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;SEA&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;AS&quot;,&quot;operatingCarrierCode&quot;:&quot;AS&quot;,&quot;flightNumber&quot;:&quot;26&quot;,&quot;bookingCode&quot;:&quot;T&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;SEA&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:41,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;311&quot;,&quot;bookingCode&quot;:&quot;L&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;MSP&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;2107&quot;,&quot;bookingCode&quot;:&quot;L&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;MSP&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:42,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1404&quot;,&quot;bookingCode&quot;:&quot;L&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;SLC&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;OO&quot;,&quot;flightNumber&quot;:&quot;4450&quot;,&quot;bookingCode&quot;:&quot;L&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;SLC&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:43,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AS&quot;,&quot;operatingCarrierCode&quot;:&quot;AS&quot;,&quot;flightNumber&quot;:&quot;529&quot;,&quot;bookingCode&quot;:&quot;K&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;PDX&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;AS&quot;,&quot;operatingCarrierCode&quot;:&quot;AS&quot;,&quot;flightNumber&quot;:&quot;686&quot;,&quot;bookingCode&quot;:&quot;G&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;PDX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:44,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AS&quot;,&quot;operatingCarrierCode&quot;:&quot;AS&quot;,&quot;flightNumber&quot;:&quot;455&quot;,&quot;bookingCode&quot;:&quot;G&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;SEA&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;AS&quot;,&quot;operatingCarrierCode&quot;:&quot;AS&quot;,&quot;flightNumber&quot;:&quot;22&quot;,&quot;bookingCode&quot;:&quot;K&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;SEA&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:45,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AS&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;6482&quot;,&quot;bookingCode&quot;:&quot;B&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:46,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;2513&quot;,&quot;bookingCode&quot;:&quot;K&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;MSP&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;2223&quot;,&quot;bookingCode&quot;:&quot;K&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;MSP&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:47,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;2377&quot;,&quot;bookingCode&quot;:&quot;K&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;SLC&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;OO&quot;,&quot;flightNumber&quot;:&quot;4450&quot;,&quot;bookingCode&quot;:&quot;K&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;SLC&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:48,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1465&quot;,&quot;bookingCode&quot;:&quot;K&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;MSP&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;2107&quot;,&quot;bookingCode&quot;:&quot;K&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;MSP&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:49,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1331&quot;,&quot;bookingCode&quot;:&quot;K&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ATL&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;2183&quot;,&quot;bookingCode&quot;:&quot;K&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ATL&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-08&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:50,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1331&quot;,&quot;bookingCode&quot;:&quot;K&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ATL&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1693&quot;,&quot;bookingCode&quot;:&quot;K&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ATL&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-08&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:51,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;CP&quot;,&quot;flightNumber&quot;:&quot;6005&quot;,&quot;bookingCode&quot;:&quot;G&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;DEN&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;1272&quot;,&quot;bookingCode&quot;:&quot;V&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DEN&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:52,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;CP&quot;,&quot;flightNumber&quot;:&quot;6050&quot;,&quot;bookingCode&quot;:&quot;O&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;SLC&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;OO&quot;,&quot;flightNumber&quot;:&quot;3099&quot;,&quot;bookingCode&quot;:&quot;S&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;SLC&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:53,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;CP&quot;,&quot;flightNumber&quot;:&quot;6053&quot;,&quot;bookingCode&quot;:&quot;Q&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;SMF&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;2672&quot;,&quot;bookingCode&quot;:&quot;G&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;SMF&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:54,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;2820&quot;,&quot;bookingCode&quot;:&quot;X&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;SLC&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;OO&quot;,&quot;flightNumber&quot;:&quot;4546&quot;,&quot;bookingCode&quot;:&quot;U&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;SLC&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:55,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AS&quot;,&quot;operatingCarrierCode&quot;:&quot;AS&quot;,&quot;flightNumber&quot;:&quot;740&quot;,&quot;bookingCode&quot;:&quot;G&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;BWI&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;UA&quot;,&quot;operatingCarrierCode&quot;:&quot;UA&quot;,&quot;flightNumber&quot;:&quot;635&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;BWI&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-08&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:56,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;OO&quot;,&quot;flightNumber&quot;:&quot;3013&quot;,&quot;bookingCode&quot;:&quot;S&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;TUS&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;98&quot;,&quot;bookingCode&quot;:&quot;N&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;TUS&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:57,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;1258&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;STL&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;YX&quot;,&quot;flightNumber&quot;:&quot;4699&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;STL&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:58,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;375&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;DFW&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;1528&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DFW&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:59,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;2420&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;DFW&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;1528&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DFW&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:60,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;2453&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;DFW&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;2311&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DFW&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:61,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;70&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;DFW&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;2535&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DFW&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:62,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;2450&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;DFW&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;2535&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DFW&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:63,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;375&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;DFW&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;2311&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DFW&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:64,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;70&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;DFW&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;2319&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DFW&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:65,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;2420&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;DFW&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;2311&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DFW&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:66,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;2450&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;DFW&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;2319&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DFW&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:67,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;2453&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;DFW&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;2535&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DFW&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:68,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;375&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;DFW&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;AA&quot;,&quot;flightNumber&quot;:&quot;2535&quot;,&quot;bookingCode&quot;:&quot;W&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DFW&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:69,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1465&quot;,&quot;bookingCode&quot;:&quot;Q&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;MSP&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;866&quot;,&quot;bookingCode&quot;:&quot;Q&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;MSP&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:70,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1435&quot;,&quot;bookingCode&quot;:&quot;Q&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;MSP&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1632&quot;,&quot;bookingCode&quot;:&quot;Q&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;MSP&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:71,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;2077&quot;,&quot;bookingCode&quot;:&quot;Q&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;MSP&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1717&quot;,&quot;bookingCode&quot;:&quot;Q&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;MSP&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:72,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;2130&quot;,&quot;bookingCode&quot;:&quot;Q&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;DTW&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;EV&quot;,&quot;flightNumber&quot;:&quot;5253&quot;,&quot;bookingCode&quot;:&quot;Q&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DTW&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:73,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;333&quot;,&quot;bookingCode&quot;:&quot;Q&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;DTW&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;EV&quot;,&quot;flightNumber&quot;:&quot;5387&quot;,&quot;bookingCode&quot;:&quot;Q&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DTW&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:74,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1506&quot;,&quot;bookingCode&quot;:&quot;Q&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;DTW&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;2629&quot;,&quot;bookingCode&quot;:&quot;Q&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DTW&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:75,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1154&quot;,&quot;bookingCode&quot;:&quot;Q&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ATL&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;2183&quot;,&quot;bookingCode&quot;:&quot;Q&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ATL&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-08&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:76,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;2130&quot;,&quot;bookingCode&quot;:&quot;Q&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;DTW&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;EV&quot;,&quot;flightNumber&quot;:&quot;5387&quot;,&quot;bookingCode&quot;:&quot;Q&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DTW&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:77,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1506&quot;,&quot;bookingCode&quot;:&quot;Q&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;DTW&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;EV&quot;,&quot;flightNumber&quot;:&quot;5253&quot;,&quot;bookingCode&quot;:&quot;Q&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;DTW&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:78,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1154&quot;,&quot;bookingCode&quot;:&quot;Q&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ATL&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;DL&quot;,&quot;operatingCarrierCode&quot;:&quot;DL&quot;,&quot;flightNumber&quot;:&quot;1693&quot;,&quot;bookingCode&quot;:&quot;Q&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ATL&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-08&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}},{&quot;id&quot;:79,&quot;airFareCategoryCode&quot;:&quot;P&quot;,&quot;airProviderCode&quot;:7,&quot;segmentList&quot;:{&quot;segment&quot;:[{&quot;id&quot;:&quot;0&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;CP&quot;,&quot;flightNumber&quot;:&quot;6064&quot;,&quot;bookingCode&quot;:&quot;G&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;LAX&quot;,&quot;destination&quot;:&quot;ABQ&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}},{&quot;id&quot;:&quot;2&quot;,&quot;carrierCode&quot;:&quot;AA&quot;,&quot;operatingCarrierCode&quot;:&quot;MQ&quot;,&quot;flightNumber&quot;:&quot;3513&quot;,&quot;bookingCode&quot;:&quot;S&quot;,&quot;flightCriteria&quot;:{&quot;origin&quot;:&quot;ABQ&quot;,&quot;destination&quot;:&quot;ORD&quot;,&quot;date&quot;:&quot;2016-10-07&quot;,&quot;cabinClass&quot;:&quot;ECONOMY&quot;}}]}}]}}]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/flights/getrichcontent/v3</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/Flights-Search?trip=roundtrip&amp;leg1=from:ord,to:lax,departure:10/05/2016TANYT&amp;leg2=from:lax,to:ord,departure:10/07/2016TANYT&amp;passengers=children:0,adults:1,seniors:0,infantinlap:Y&amp;mode=search</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="385 /api/userhistory" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">l</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">HOTEL_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">HOTEL_DETAIL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">AIR_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">PACKAGE_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">AIR_DETAIL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">CAR_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">CRUISE_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">ACTIVITY_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">ACTIVITY_DETAIL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1469203630659</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/userhistory</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/Flights-Search?trip=roundtrip&amp;leg1=from:ord,to:lax,departure:10/05/2016TANYT&amp;leg2=from:lax,to:ord,departure:10/07/2016TANYT&amp;passengers=children:0,adults:1,seniors:0,infantinlap:Y&amp;mode=search</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="386 /api/userhistory" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">l</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">HOTEL_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">HOTEL_DETAIL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">AIR_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">PACKAGE_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">AIR_DETAIL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">CAR_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">CRUISE_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">ACTIVITY_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">ACTIVITY_DETAIL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1469203630661</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/userhistory</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/Flights-Search?trip=roundtrip&amp;leg1=from:ord,to:lax,departure:10/05/2016TANYT&amp;leg2=from:lax,to:ord,departure:10/07/2016TANYT&amp;passengers=children:0,adults:1,seniors:0,infantinlap:Y&amp;mode=search</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Flights UDP Controller" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2533 /Flight-Search-Details" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">${FSR_RETURN_CONTINUATION_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tripId0" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tripId0</stringProp>
                  <stringProp name="Argument.value">${TRIP_ID_OUTBOUND}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tripId1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tripId1</stringProp>
                  <stringProp name="Argument.value">${TRIP_ID_RETURN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="leg1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">leg1</stringProp>
                  <stringProp name="Argument.value">BV</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="leg2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">leg2</stringProp>
                  <stringProp name="Argument.value">BV</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="xsellchoice" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">xsellchoice</stringProp>
                  <stringProp name="Argument.value">showhotelbanneronly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="addHotelPackage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">addHotelPackage</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isSplitTicket" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSplitTicket</stringProp>
                  <stringProp name="Argument.value">${SPLIT_TICKET}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/Flight-Search-Details</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="CSS/JQuery Extractor" enabled="true">
              <stringProp name="HtmlExtractor.refname">TRIP_DETAILS_CONTINUATION_ID</stringProp>
              <stringProp name="HtmlExtractor.expr">input[name=c]</stringProp>
              <stringProp name="HtmlExtractor.attribute">value</stringProp>
              <stringProp name="HtmlExtractor.default">TRIP_DETAILS_CONTINUATION_ID_BROKE</stringProp>
              <stringProp name="HtmlExtractor.match_number"></stringProp>
              <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            </HtmlExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-817251338">Flight Summary</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2581 /news/v1/expid/-1/siteid/1/tuid/-1/guid/5b3e7a2d-0c78-4303-bd0d-9ab5e5240dd4" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">format</stringProp>
                  <stringProp name="Argument.value">jsonp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="callback" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">callback</stringProp>
                  <stringProp name="Argument.value">jQuery18203043215234493277_1469220891658</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1469220893359</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">newsfeed-scalatra-service.us-east-1.prod.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/news/v1/expid/-1/siteid/1/tuid/-1/guid/5b3e7a2d-0c78-4303-bd0d-9ab5e5240dd4</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/Details?action=UnifiedDetailsWidget@showDetails&amp;rfrr=&amp;c=44615089-65eb-40b5-8f66-4d3f831abd51&amp;udpDisplayMode=showhotelbanneronly</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2584 /urgencyservice/v1/ticker/flight" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="callback" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">callback</stringProp>
                  <stringProp name="Argument.value">jQuery18203043215234493277_1469220891659</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="bookingDuration" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bookingDuration</stringProp>
                  <stringProp name="Argument.value">30d</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">booking</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientId</stringProp>
                  <stringProp name="Argument.value">flightsudp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="startDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">startDate</stringProp>
                  <stringProp name="Argument.value">8%2F24%2F2016</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="endDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">endDate</stringProp>
                  <stringProp name="Argument.value">8%2F24%2F2016</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tlaList" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tlaList</stringProp>
                  <stringProp name="Argument.value">ORD%3ALAX</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1469220893466</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">urgency.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/urgencyservice/v1/ticker/flight</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/Details?action=UnifiedDetailsWidget@showDetails&amp;rfrr=&amp;c=44615089-65eb-40b5-8f66-4d3f831abd51&amp;udpDisplayMode=showhotelbanneronly</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2590 /service/userHistory/count/jsonp" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="guid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">guid</stringProp>
                  <stringProp name="Argument.value">5b3e7a2d-0c78-4303-bd0d-9ab5e5240dd4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="expuserid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">expuserid</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="siteid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">siteid</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">HOTEL_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">HOTEL_DETAIL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">AIR_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">PACKAGE_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">AIR_DETAIL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">CAR_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">CRUISE_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">ACTIVITY_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">ACTIVITY_DETAIL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">format</stringProp>
                  <stringProp name="Argument.value">jsonp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="callback" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">callback</stringProp>
                  <stringProp name="Argument.value">jQuery18203043215234493277_1469220891660</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1469220893626</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">userhistory-web.us-east-1.prod.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/service/userHistory/count/jsonp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/Details?action=UnifiedDetailsWidget@showDetails&amp;rfrr=&amp;c=44615089-65eb-40b5-8f66-4d3f831abd51&amp;udpDisplayMode=showhotelbanneronly</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2608 /api/userhistory" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">l</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">HOTEL_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">HOTEL_DETAIL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">AIR_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">PACKAGE_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">AIR_DETAIL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">CAR_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">CRUISE_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">ACTIVITY_SEARCH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lobs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lobs</stringProp>
                  <stringProp name="Argument.value">ACTIVITY_DETAIL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1469220894046</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/userhistory</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/Details?action=UnifiedDetailsWidget@showDetails&amp;rfrr=&amp;c=44615089-65eb-40b5-8f66-4d3f831abd51&amp;udpDisplayMode=showhotelbanneronly</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Book Now Controller" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2616 /Details? Book now" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="action" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">action</stringProp>
                  <stringProp name="Argument.value">UnifiedDetailsWidget@bookNow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">${TRIP_DETAILS_CONTINUATION_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dxSelection" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dxSelection</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="insuranceSelection" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">insuranceSelection</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="defaultProductId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">defaultProductId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="selectedProductId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">selectedProductId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="totalBrandedFarePrice" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">totalBrandedFarePrice</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/Details?c=${TRIP_DETAILS_CONTINUATION_ID}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1709702350">Who&apos;s traveling</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2630 /FlightCheckout" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tripid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tripid</stringProp>
                  <stringProp name="Argument.value">714b494d-5257-4cda-814a-b2441b47c912</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">c26635d1-e494-436d-8be7-1ebddb955f72</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.expedia.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/FlightCheckout</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.expedia.com/Details?action=UnifiedDetailsWidget@showDetails&amp;rfrr=&amp;c=44615089-65eb-40b5-8f66-4d3f831abd51&amp;udpDisplayMode=showhotelbanneronly</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Simple Data Writer" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${__P(report.path)}/errors.log</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree>
      <ConfigTestElement guiclass="PropertyControlGui" testclass="ConfigTestElement" testname="Property Display" enabled="true"/>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
